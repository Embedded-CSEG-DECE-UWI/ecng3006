

//function prototypes in meman_v0_4.h
//implementation in meman_v0_4.c

the refresh function

 void HRVrefreshLCD(void)
 {
 //    for (i=0; i < 4; i++)
 //    {
     itoa(HRscrollCnt, page);
     itoa(HRreccnt, totalpages);
         while (BusyXLCD());
         WriteCmdXLCD(0b00000001);
         itoa(hrDispL, numtodisp);
         putsXLCD(numtodisp);      
         while( BusyXLCD() );
         SetDDRamAddr(0x00);
         putrsXLCD("HR  :");
         SetDDRamAddr(0x06);
         putsXLCD(numtodisp);
         
         while( BusyXLCD() );
         SetDDRamAddr(0x0B);
         putsXLCD(page);
         while( BusyXLCD() );
         SetDDRamAddr(0x0D);
         putrsXLCD("/");
         while( BusyXLCD() );
         SetDDRamAddr(0x0E);
         putsXLCD(totalpages);
         
         integers = hrvDispL;
         //decimals = ((values[i] * 100)%100);
         decimals = fmod((hrvDispL * 10),10);
         //itoa(values[i], output);
         itoa(integers, integerchar);
         itoa(decimals, decimalchar);
         SetDDRamAddr(0x40);
         putrsXLCD("HRV :");
         while( BusyXLCD() );         
         SetDDRamAddr(0x46);
         putsXLCD(integerchar);
         putrsXLCD(".");
         putsXLCD(decimalchar);  
         
         
         integers = tempDispL;
         //decimals = ((values[i] * 100)%100);
         decimals = fmod((tempDispL * 10),10);
         //itoa(values[i], output);
         itoa(integers, integerchar);
         itoa(decimals, decimalchar);       
         while( BusyXLCD() );         
         SetDDRamAddr(0x10);
         putrsXLCD("Temp:");
         while( BusyXLCD() );         
         SetDDRamAddr(0x16);
         putsXLCD(integerchar);
         putrsXLCD(".");
         putsXLCD(decimalchar); 
         
         integers = glucDispL;
         //decimals = ((values[i] * 100)%100);
         decimals = fmod((glucDispL * 10),10);
         //itoa(values[i], output);
         itoa(integers, integerchar);
         itoa(decimals, decimalchar);       
         while( BusyXLCD() );         
         SetDDRamAddr(0x50);
         putrsXLCD("Gluc:");
         while( BusyXLCD() );         
         SetDDRamAddr(0x56);
         putsXLCD(integerchar);
         putrsXLCD(".");
         putsXLCD(decimalchar);
     
 }

// 

//================================1.  HARDWARE INITIALISATION===================================
eeprom_init();// !!! before you use epromm
ram_init();// !!! before you use ram
//========================================================================


//======================EPROM READ AND WRITE (YOU CAN WRITE FROM 0x20 onwards)===========================================
someRandomChar = readEEPROM(ADDRESS); //read from a location
writeEEPROM(HR_TRACK_STATUS,TRACKING); // this causes the system to initialize counters and pointer addresses acording to past activity (context)
//==========================================================================================================





//========================2. SET DEFAULT TRACKING STATUS =============================================
writeEEPROM(HR_TRACK_STATUS,TRACKING);
writeEEPROM(HRV_TRACK_STATUS,TRACKING);
writeEEPROM(TEMP_TRACK_STATUS,TRACKING);
writeEEPROM(GLUC_TRACK_STATUS,TRACKING);
// conversly, TRACKING is replaced with NOT_TRACKING, the system will not track storgae
// ... perhaps I should but an if clause to prevent reorcds from being written if tracking is off

//=================================================================================================



//==========================3. SET DEFAULT MAXIMUM VALUES TO BE STORED =============================
// when you change the number of values to be stored use this store the number to the eeprom
writeEEPROM(HR_MAX_STORE, 0x0B); // first argument is 8 bit address second argument is the data to write
writeEEPROM(HRV_MAX_STORE, 0x0B);
writeEEPROM(TEMP_MAX_STORE, 0x0B);
writeEEPROM(GLUC_MAX_STORE, 0x0B);
//==================================================================================================






//==================================4. INITIALIZE VARIABLES ==================================================
// call these to initilize tracking at the beginning - see integtests2.c 
RecordTrackInit(HR_TRACK_STATUS,HR_MAX_STORE,HR_RCCNT,INTSIZE,&HRreccnt,&HRMaxRecords,&HRwriteAdd, &HRreadAddX);
RecordTrackInit(HRV_TRACK_STATUS,HRV_MAX_STORE,HRV_RCCNT,FLOATSIZE,&HRVreccnt,&HRVMaxRecords,&HRVwriteAdd, &HRVreadAddX);
RecordTrackInit(TEMP_TRACK_STATUS,TEMP_MAX_STORE,TEMP_RCCNT,FLOATSIZE,&TEMPreccnt,&TEMPMaxRecords,&TEMPwriteAdd, &TEMPreadAddX);
RecordTrackInit(GLUC_TRACK_STATUS,GLUC_MAX_STORE,GLUC_RCCNT,FLOATSIZE,&GLUCreccnt,&GLUCMaxRecords,&GLUCwriteAdd, &GLUCreadAddX);
//==================================================================================================================================





//--------------------------------------------------------------------------------------------------------
GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO 
GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO 
GO GO GO                GO GO GO GO GO GO GO GO                GO GO GO GO GO GO          GO GO GO GO GO GO 
GO                      GO GO GO GO GO GO GO                      GO GO GO GO GO          GO GO GO GO GO GO 
GO                          O GO GO GO GO GO                      GO GO GO GO GO          GO GO GO GO GO GO 
GO       GO GO GO GO        O GO GO GO GO GO       GO GO GO       GO GO GO GO GO          GO GO GO GO GO GO 
GO       GO GO GO GO        O GO GO GO GO GO       GO GO GO       GO GO GO GO GO          GO GO GO GO GO GO 
GO       GO GO GO GO GO GO GO GO GO GO GO GO       GO GO GO       GO GO GO GO GO          GO GO GO GO GO GO 
GO       GO GO GO GO GO GO GO GO GO GO GO GO       GO GO GO       GO GO GO GO GO          GO GO GO GO GO GO 
GO       GO GO GO GO GO GO GO GO GO GO GO GO       GO GO GO       GO GO GO GO GO          GO GO GO GO GO GO 
GO       GO GO GO GO GO GO GO GO GO GO GO GO       GO GO GO       GO GO GO GO GO          GO GO GO GO GO GO 
GO       GO GO                   GO GO GO GO       GO GO GO       GO GO GO GO GO GO    GO GO GO GO GO GO GO 
GO       GO GO                   GO GO GO GO       GO GO GO       GO GO GO GO GO GO    GO GO GO GO GO GO GO 
GO       GO GO GO GO       GO GO GO GO GO GO       GO GO GO       GO GO GO GO GO GO    GO GO GO GO GO GO GO 
GO       GO GO GO GO       GO GO GO GO GO GO       GO GO GO       GO GO GO GO GO GO GO GO GO GO GO GO GO GO 
GO                         GO GO GO GO GO GO                      GO GO GO GO GO          GO GO GO GO GO GO 
GO GO                   GO GO GO GO GO GO GO                      GO GO GO GO GO          GO GO GO GO GO GO 
GO GO                   GO GO GO GO GO GO GO GO                GO GO GO GO GO GO          GO GO GO GO GO GO 
GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO 
GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO 
GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO GO 
//----------------------------------------------------------------------------------------------------------




//===============================5. Making REcords==================================================
//making records
HR.intVAL = tints[v]; // assign a value
MakeRecordHR(HR_STORAGE_SECTOR,HR_RCCNT,HR); // use this to make a record to the flash RAM

HRV.floatVAL = toats[v];
MakeRecordHRV(HRV_STORAGE_SECTOR,HRV_RCCNT,HRV);

TEMP.floatVAL = toats2[v];
MakeRecordTEMP(TEMP_STORAGE_SECTOR,TEMP_RCCNT,TEMP);

GLUC.floatVAL = toats3[v];
MakeRecordHRV(GLUC_STORAGE_SECTOR,GLUC_RCCNT,GLUC);
//================================6. Scrolling=========================================


//========================================SCROLLING============================
openRecordsLite(); // call this before you initial display, it initiates the display values to the first page
pageScrollLite(SCROLL_UP);// call this to scroll up
pageScrollLite(SCROLL_DOWN);// call this to scroll down
//=============================================================================================
